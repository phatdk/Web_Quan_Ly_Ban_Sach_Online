@using BookShop.BLL.ConfigurationModel.OrderDetailModel;
@using BookShop.BLL.ConfigurationModel.OrderModel;
@using BookShop.BLL.ConfigurationModel.UserModel;
@using BookShop.DAL.Entities;
@using System.Globalization;
@model BookShop.BLL.ConfigurationModel.OrderModel.OrderViewModel;
@{
	ViewData["Title"] = "Bán hàng offline";
	Layout = "~/Areas/Admin/Views/Shared/_adminLayout.cshtml";
	Userr staff = ViewBag.Staff;
	List<UserModel> users = ViewBag.Users;
}

<form>
	<div class="row">
		<div class="col-9 bg-light">
			<div class="row">
				<div class="col-4">
					<div class="table-container">
						<table class="table table-striped border border-2 border-secondary">
							<thead>
								<tr>
									<th scope="col">Stt</th>
									<th scope="col">Code</th>
									<th scope="col">Tên KH</th>
									<th scope="col">Action</th>
								</tr>
							</thead>
							<tbody id="waitingOrderList">
							</tbody>
						</table>
					</div>
				</div>
				<div class="col-8">
					<div class="justify-content-center text-center m-2">
						<input hidden asp-for="Id" value="0" id="orderId" />
						<input asp-for="Code" id="orderCode" readonly class="text-center" />
					</div>
					<table id="tableDetail" class="table table-striped border border-2 border-primary">
						<thead>
							<tr>
								<th scope="col">Stt</th>
								<th scope="col">Tên Sp</th>
								<th scope="col">Giá bán</th>
								<th scope="col">Số lượng</th>
								<th scope="col">Action</th>
							</tr>
						</thead>
						<tbody id="deatilOrder">
						</tbody>
					</table>
				</div>
			</div>
			<div class="row">
				<div class="col-12">
					<div class="w-75 d-block mb-2">
						<div class="btn-group">
							<input type="text" oninput="getProduct(this.value)" placeholder="Nhập tên sách" />
							<i class="btn btn-outline-info fa-solid fa-magnifying-glass"></i>
						</div>
					</div>
					<table class="table table-striped border border-2 border-success">
						<thead>
							<tr>
								<th scope="col">Hình ảnh</th>
								<th scope="col">Tên Sp</th>
								<th scope="col">Giá bán</th>
								<th scope="col">Số lượng tồn</th>
								<th scope="col">Số lượng</th>
								<th scope="col">Trạng thái</th>
								<th scope="col">Action</th>
							</tr>
						</thead>
						<tbody id="productList">
						</tbody>
					</table>
				</div>
			</div>
		</div>

		<div class="col-3 border border-2 border-secondary ps-2 pt-2 pb-2 bg-light">
			<label class="text-black-50">Nhân viên trực ca</label>
			<div class="form-group row">
				<input type="text" asp-for="@Model.Id_Staff" id="orderIdStaff" hidden value="@staff.Id" />
				<div class="flex-column justify-content-center text-center">
					<span class="me-4 text-center text-success text-decoration-underline"><i class="fa-solid fa-user-clock"></i> @staff.Name </span>
					<span class="text-center text-danger text-decoration-underline"><i class="fa-solid fa-barcode"></i> @staff.Code</span>
				</div>
			</div><hr />

			<label class="text-black-50">Thông tin khách hàng</label>

			<div class="mt-2 p-2 border border-top-1 border-dark">
				<div class="form-group">
					<label class="form-label">Tên khách hàng</label>
					<input type="text" asp-for="@Model.Id_User" id="orderIdUser" hidden />
					<input type="text" class="form-control" asp-for="@Model.Receiver" id="orderReceiver" />
				</div>
				<div class="form-group">
					<label class="form-label">Tài khoản khách hàng</label>
					<input type="text" class="form-control" asp-for="@Model.NameUser" id="orderNameUser" readonly />
					<input type="text" class="form-control" asp-for="@Model.UserCode" list="codeList" id="orderUserCode" onchange="checkUser(this.value)" />
					<datalist id="codeList">
						@if (users != null)
						{
							foreach (var item in users)
							{
								<option value="@item.Code" />
							}
						}
					</datalist>
				</div>
				<div class="form-group">
					<label class="form-label">Email</label>
					<input type="text" class="form-control" id="orderEmail" list="emailList" onchange="checkUser(this.value)" asp-for="@Model.Email" />
					<datalist id="emailList">
						@if (users != null)
						{
							foreach (var item in users)
							{
								<option value="@item.Email" />
							}
						}
					</datalist>
				</div>
				<div class="form-group">
					<label class="form-label">Số điện thoại</label>
					<input type="text" class="form-control" list="phoneList" id="orderPhone" asp-for="@Model.Phone" />
					<datalist id="phoneList">
						@if (users != null)
						{
							foreach (var item in users)
							{
								<option value="@item.Phone" />
							}
						}
					</datalist>
				</div>
			</div>
			<div class="form-group mt-2">
				<span class="d-block w-100 m-2">Khuyến mại được kích hoạt tự động</span>
				<input asp-for="Id_Promotions" hidden id="orderIdPromotion" />
				<span class="d-block w-100 m-2">Tên khuyễn mãi: <span id="orderNamePromotion"></span></span>
				<span class="d-block w-100 m-2">Số tiền giảm: <span id="orderReduct"></span></span>

				<span class="d-block w-100 m-2">Tổng tiền: <span id="total"></span></span>
				<hr />
				<span class="d-block w-100">Thanh toán: <span id="payment"></span></span>
			</div>
			<div class="justify-content-center text-center mt-5">
				<div class="btn-group" role="group" aria-label="Basic outlined example">
					<input type="button" class="btn btn-outline-primary" onclick="reFresh()" value="Làm mới" />
					<input type="button" class="btn btn-outline-warning" onclick="saveOrder()" value="Lưu tạm" />
					<input type="button" class="btn btn-outline-success" onclick="createOrder()" value="Thanh toán" />
				</div>
			</div>
		</div>
	</div>
</form>

<script>
	function getWaitingOrders() {
		$.ajax({
			url: '/Admin/OfflineSale/GetWaitingOrder',
			type: 'GET',
			dataType: 'json',
			success: function (data) {
				var detailsList = $("#waitingOrderList");
				detailsList.empty();
				data.forEach(function (item, index) {
					index += 1;
					var orderRow =
						'<tr>' +
						'<th>' + index + '</th>' +
						'<td>' + item.code + '</td>' +
						'<td>' + item.nameUser + '</td>' +
						'<td><input type="button" class="btn btn-info" onclick = "checkChange(' + item.id + ')" value="Xem"/></td >' +
						'</tr>';
					detailsList.append(orderRow);
				});
			},
			error: function (error) {
				alert('Có lỗi xảy ra: ' + error.responseText);
			}
		});
	};

	function checkChange(id) {
		var checkId = document.getElementById('orderId').value;
		if (checkId !== id) {
			if (changeChecked) {
				if (confirm("Thay đổi chưa được lưu! \n Bạn có muốn lưu thay đổi ?")) {
					saveOrder();
					getDetailOrders(id);
				}
				else {
					$.ajax({
						url: '/Admin/OfflineSale/ClearTemporary',
						type: 'POST',
						success: function (result) {
							document.getElementById('orderId').value = id;
							getDetailOrders(id);
						},
					});
				}
				changeChecked = false;
			}
			else {
				$.ajax({
					url: '/Admin/OfflineSale/ClearTemporary',
					type: 'POST',
					success: function (result) {
						document.getElementById('orderId').value = id;
						getDetailOrders(id);
					},
				});
				getDetailOrders(id);
			}
		}
	};
	// chuyển đổi hiện thị tiền tiệ
	function formatCurrency(amount) {
		return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);
	};

	var total = 0;
	var payment = 0;
	function checkPromotion(total) {
		if (total > 0) {
			$.ajax({
				url: '/Admin/OfflineSale/CheckActivePromotion',
				type: 'GET',
				data: { total: total },
				success: function (data) {
					if (data != null && data.id != 0) {
						$('#orderIdPromotion').val(data.id);
						document.getElementById('orderNamePromotion').innerHTML = data.name;
						document.getElementById('orderReduct').innerHTML = formatCurrency(data.totalReduct);
						payment = total - data.totalReduct;
						document.getElementById('payment').innerHTML = formatCurrency(payment);
					}
					else {
						$('#orderIdPromotion').val('');
						document.getElementById('orderNamePromotion').innerHTML = "Không";
						document.getElementById('orderReduct').innerHTML = formatCurrency(0);
						payment = total - data.totalReduct;
						document.getElementById('payment').innerHTML = formatCurrency(payment);
					}
				}
			});
		}
		else {
			$('#orderIdPromotion').val('');
			document.getElementById('orderNamePromotion').innerHTML = "Không";
			document.getElementById('orderReduct').innerHTML = formatCurrency(0);
			payment = total;
			document.getElementById('payment').innerHTML = formatCurrency(payment);
		}
	};

	function getDetailOrders(id) {
		var orderId = document.getElementById('orderId').value;
		$.ajax({
			url: '/Admin/OfflineSale/GetDetails',
			type: 'GET',
			data: { id: id },
			dataType: 'json',
			success: function (data) {
				var detailsList = $("#deatilOrder");
				detailsList.empty();
				if (data.order.id !== orderId) {
					$('#orderCode').val(data.order.code);
					$('#orderIdUser').val(data.order.id_User);
					$('#orderNameUser').val(data.order.nameUser);
					$('#orderUserCode').val(data.order.userCode);
					$('#orderEmail').val(data.order.email);
					$('#orderPhone').val(data.order.phone);
				}
				data.details.forEach(function (item, index) {
					index += 1;
					var orderRow =
						'<tr>' +
						'<th>' + index + '</th>' +
						'<td>' + item.nameProduct + '</td>' +
						'<td>' + item.price + '</td>' +
						'<td id="removeProdq-' + item.id_Product + '">' + item.quantity + '</td>' +
						'<td hidden>' + item.id_Order + '</td>' +
						'<td hidden>' + item.id_Product + '</td>' +
						'<th>' +
						'<div class="btn-group w-25 me-2" role="group">' +
						'<input type="number" class="text-center w-50" id="removeQuantity-' + item.id_Product + '" min="1" max="' + item.quantity + '" value="1"/>' +
						'<input type="button" class="btn btn-warning w-50" onclick = "removeProduct(' + item.id_Product + ')" value="Bỏ" /> ' +
						'</div>' +
						'<input type="button" class="btn btn-danger" onclick = "removeAll(' + item.id_Product + ',' + item.quantity + ')" value="Bỏ hết" /> ' +
						'</th >' +
						'</tr>';
					detailsList.append(orderRow);
				});
				total = data.total; // tinh tien
				document.getElementById('total').innerHTML = formatCurrency(data.total);
				checkPromotion(total);
			},
			error: function (error) {
				alert('Có lỗi xảy ra: ' + error.responseText);
			}
		});
	};

	function getProduct(keyWord) {
		$.ajax({
			url: '/Admin/OfflineSale/GetProducts',
			type: 'GET',
			data: { keyWord: keyWord },
			success: function (data) {
				var detailsList = $("#productList");
				detailsList.empty();
				let statusColor = "";
				let status = "";
				data.forEach(function (item, index) {
					index += 1;
					if (item.status === 1) {
						status = "Đang bán";
						statusColor = "text-success";
					} else if (item.status === 0) {
						status = "Không bán";
						statusColor = "text-danger";
					} else {
						status = "Không xác định";
						statusColor = "text-warning";
					}
					var orderRow =
						'<tr>' +
						'<td><img width=75px src="' + item.imgUrl + '" /> </td>' +
						'<td>' + item.name + '</td>' +
						'<td>' + item.price + '</td>' +
						'<td id="prodq-' + item.id + '">' + item.quantity + '</td>' +
						'<td> <input id="quantity-' + item.id + '" class="text-center" style = "max-width: 70px" type = "number" min = "1" max = "' + item.quantity + '" value = "1" /> </td>' +
						'<th class="' + statusColor + '">' + status + '</th>' +
						'<td> <input type="button" class="btn btn-success" onclick = "addProduct(' + item.id + ')" value="Thêm"/></td >' +
						'</tr>';
					detailsList.append(orderRow);
				});
			},
			error: function (error) {
				alert('Có lỗi xảy ra: ' + error.responseText);
			}
		});
	};
	// chuyển đổi chuỗi mã hóa html qua tiếng việt dm
	function decodeHtml(html) {
		var txt = document.createElement("textarea");
		txt.innerHTML = html;
		return txt.value;
	};

	var changeChecked = false;

	function checkUser(key) {
		$.ajax({
			url: '/Admin/OfflineSale/GetUser',
			type: 'POST',
			data: { keyWord: key },
			success: function (data) {
				if (data != null && data.id !== 0) {
					$('#orderIdUser').val(data.id);
					$('#orderNameUser').val(data.name);
					$('#orderUserCode').val(data.code);
					$('#orderPhone').val(data.phone);
					$('#orderEmail').val(data.email);
				}
				else {
					var decodedString = decodeHtml("@Model.NameUser");
					$('#orderIdUser').val("@Model.Id_User");
					$('#orderNameUser').val(decodedString);
					$('#orderUserCode').val("@Model.UserCode");
				}
			},
		});
	};

	function addProduct(id) {
		changeChecked = true;
		var orderId = document.getElementById('orderId').value;
		var productQuantity = parseInt(document.getElementById('prodq-' + id).innerHTML);
		var quantity = document.getElementById('quantity-' + id).value;
		if (quantity <= productQuantity) {
			$.ajax({
				url: '/Admin/OfflineSale/AddProduct',
				type: 'POST',
				data: { id: id, orderId: orderId, quantity: quantity },
				success: function (result) {
					document.getElementById('prodq-' + id).innerHTML = productQuantity - quantity;
					getDetailOrders(orderId);
				},
				error: function (error) {
					alert('Có lỗi xảy ra: ' + error.responseText);
				}
			});
		}
		else {
			alert("Số lượng vượt quá số lượng tồn");
		}
	};

	function removeProduct(id) {
		changeChecked = true;
		var orderId = document.getElementById('orderId').value;
		var removeProductQuantity = parseInt(document.getElementById('removeProdq-' + id).innerHTML);
		var quantity = parseInt(document.getElementById('removeQuantity-' + id).value);
		var productQuantity = parseInt(document.getElementById('prodq-' + id).innerHTML);
		if (quantity <= removeProductQuantity) {
			$.ajax({
				url: '/Admin/OfflineSale/AddProduct',
				type: 'POST',
				data: { id: id, orderId: orderId, quantity: -quantity },
				success: function (result) {
					document.getElementById('prodq-' + id).innerHTML = productQuantity + quantity;
					getDetailOrders(orderId);
				},
				error: function (error) {
					alert('Có lỗi xảy ra: ' + error.responseText);
				}
			});
		}
		else {
			alert("Số lượng vượt quá số lượng sản phẩm trong đơn");
		}
	};

	function removeAll(id, quantity) {
		changeChecked = true;
		var orderId = document.getElementById('orderId').value;
		var productQuantity = parseInt(document.getElementById('prodq-' + id).innerHTML);
		$.ajax({
			url: '/Admin/OfflineSale/AddProduct',
			type: 'POST',
			data: { id: id, orderId: orderId, quantity: -quantity },
			success: function (result) {
				document.getElementById('prodq-' + id).innerHTML = productQuantity + quantity;
				getDetailOrders(orderId);
			},
			error: function (error) {
				alert('Có lỗi xảy ra: ' + error.responseText);
			}
		});
	};

	function reFresh() {
		checkChange(0);
		getWaitingOrders();
		getProduct();
		checkPromotion(0);
	};

	function saveOrder() {
		var id = document.getElementById('orderId').value;
		var id_Staff = document.getElementById('orderIdStaff').value;
		var id_User = document.getElementById('orderIdUser').value;
		var nameUser = document.getElementById('orderNameUser').value;
		var email = document.getElementById('orderEmail').value;
		var phone = document.getElementById('orderPhone').value;
		var receiver = document.getElementById('orderReceiver').value;
		$.ajax({
			url: '/Admin/OfflineSale/SaveTemprory',
			type: 'POST',
			data: {
				Id: id, Id_Staff: id_Staff, Id_User: id_User,
				Email: email, Phone: phone,
				Receiver: receiver, NameUser: nameUser
			},
			success: function (result) {
				if (result.success) {
					alert(result.message);
					getWaitingOrders();
					changeChecked = false;
					checkChange(0);
					getProduct();
				} else {
					alert('Xác nhận thất bại: ' + result.errorMessage);
				}
			},
			error: function (error) {
				alert('Có lỗi xảy ra: ' + error.responseText);
			}
		});
	};

	function createOrder() {
		var id = document.getElementById('orderId').value;
		var id_Staff = document.getElementById('orderIdStaff').value;
		var id_User = document.getElementById('orderIdUser').value;
		var id_Promotion = document.getElementById('orderIdPromotion').value;
		var nameUser = document.getElementById('orderNameUser').value;
		var email = document.getElementById('orderEmail').value;
		var phone = document.getElementById('orderPhone').value;
		var receiver = document.getElementById('orderReceiver').value;
		$.ajax({
			url: '/Admin/OfflineSale/CreateOfflineOrder',
			type: 'POST',
			data: {
				Id: id, Id_Staff: id_Staff, Id_User: id_User, Id_Promotion: id_Promotion,
				Email: email, Phone: phone,
				Receiver: receiver, NameUser: nameUser
			},
			success: function (result) {
				if (result.success) {
					alert(result.message);
					getWaitingOrders();
					changeChecked = false;
					checkChange(0);
					getProduct();
				} else {
					alert('Xác nhận thất bại: ' + result.errorMessage);
				}
			},
			error: function (error) {
				alert('Có lỗi xảy ra: ' + error.responseText);
			}
		});
	};

	$(document).ready(function () {
		getWaitingOrders();
		getProduct();
		getDetailOrders(0);
		checkPromotion(total);
	});
</script>