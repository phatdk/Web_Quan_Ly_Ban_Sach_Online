@using BookShop.BLL.ConfigurationModel.AuthorModel;
@using BookShop.BLL.ConfigurationModel.GenreModel;
@using BookShop.BLL.ConfigurationModel.SupplierModel;
@model BookShop.BLL.ConfigurationModel.BookModel.UpdateBookModel

@{
	ViewData["Title"] = "Edit";
	List<AuthorModel> authors = ViewBag.Authors;
	List<GenreModel> genres = ViewBag.Genres;
	List<SupplierViewModel> suppliers = ViewBag.Supplier;
}

<h1>Edit</h1>

<h4>BookViewModel</h4>
<hr />
<style>
	.form-column {
		float: left;
		width: 30%; /* Điều chỉnh chiều rộng của cột tại đây */
		margin-right: 5%; /* Khoảng cách giữa hai cột */
	}

	.clear {
		clear: both;
	}

	.btn btn-primary {
		width: 50px;
	}

	.form-control {
		height: 30px;
	}
</style>
@using (Html.BeginForm("Edit", "Book", FormMethod.Post))
{
	@Html.AntiForgeryToken()
	<div class="form-column">
		<input asp-for="Id" value="@Model.Id" hidden/>
		<div class="form-group">
			@Html.Label("Mã định danh")
			@Html.TextBoxFor(m => m.ISBN, new { @class = "form-control" })
		</div>

		<div class="form-group">
			@Html.Label("Tiêu đề sách")
			@Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
		</div>

		<div class="form-group">
			@Html.Label("Số lượng")
			@Html.TextBoxFor(m => m.Quantity, new { @class = "form-control" })
		</div>

		<div class="form-group">
			@Html.Label("Giá bìa")
			@Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
		</div>

		<div class="form-group">
			@Html.Label("Giá nhập")
			@Html.TextBoxFor(m => m.ImportPrice, new { @class = "form-control" })
		</div>

		<div class="form-group">
			@Html.Label("Số trang")
			@Html.TextBoxFor(m => m.Pages, new { @class = "form-control" })
		</div>
		<div class="form-group">
			@Html.Label("Kích thước trang")
			@Html.TextBoxFor(m => m.PageSize, new { @class = "form-control" })
		</div>
		<div class="form-group">
			@Html.Label("Cover")
			@Html.TextBoxFor(m => m.Cover, new { @class = "form-control" })
		</div>
		<div class="form-group">
			@Html.Label("Ngày xuất bản")
			@Html.EditorFor(m => m.PublicationDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
		</div>
		<div class="clear"></div>
	</div>
	<div class="form-column">
		<div class="form-group">
			<div class="form-group">
				@Html.Label("Trọng lượng")
				@Html.TextBoxFor(m => m.Weight, new { @class = "form-control" })
			</div>
			@Html.Label("Chiều dài sách")
			@Html.TextBoxFor(m => m.Length, new { @class = "form-control" })
		</div>
		<div class="form-group">
			@Html.Label("Chiều cao")
			@Html.TextBoxFor(m => m.Height, new { @class = "form-control" })
		</div>
		<div class="form-group">
			@Html.Label("Ngày tạo")
			@Html.EditorFor(m => m.CreatedDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
		</div>
		<div class="form-group">
				@Html.Label("Độc giả")
				@Html.TextBoxFor(m => m.Reader, new { @class = "form-control" })
		</div>
		<div class="form-group">
			@Html.Label("Mô tả sản phẩm")
			@Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
		</div>
		<div class="form-group">
			@Html.Label("Status")
			@Html.TextBoxFor(m => m.Status, new { @class = "form-control" })
		</div>

		<div class="form-group">
			@Html.Label("Tác giả")
			@Html.ListBoxFor(m => m.authorModels, new MultiSelectList(authors, "Id", "Name"), new { @class = "form-control chosen-select" })
		</div>

		<div class="form-group">
			@Html.Label("Thể loại")
			@Html.ListBoxFor(m => m.genreModels, new MultiSelectList(genres, "Id", "Name"), new { @class = "form-control chosen-select"})
		</div>

		<div class="form-group">
			@Html.Label("Nhà sản xuất")
			@Html.DropDownListFor(m => m.Id_Supplier, new SelectList(suppliers, "Id", "Name"), new { @class = "form-control chosen-select"})
		</div>
		<div class="clear"></div>
		<br />
		<button type="submit" class="btn btn-primary">Save</button>
	</div>
}
<div>
	<a asp-action="Index">Back to List</a>
</div>


