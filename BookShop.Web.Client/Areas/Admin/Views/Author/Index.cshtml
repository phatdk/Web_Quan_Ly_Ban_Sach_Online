@model IEnumerable<BookShop.BLL.ConfigurationModel.AuthorModel.AuthorModel>

@{
    ViewData["Title"] = "Index";
    List<string> imageExtensions = new List<string>()
    {
    ".png", ".jpg", ".jpeg", ".gif",".pdf", ".tiff"
    };
}

<h1>Danh sách tác giả</h1>

<p>
    <a asp-action="Create">Thêm mới</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Img)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Index)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th> Thao Tác</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
               @* @Html.DisplayFor(modelItem => item.Img)*@
               @{
                        var a = System.IO.Path.GetExtension(item.Img);
                        @if (@imageExtensions.Contains(a.Trim())) // .Trim để cut hết dấu cách
                        {
                         <img src="/img/@item.Img" height="100px">  
                        }else
                        {
                            <img src="/img/bug2.png" height="100px"> 
                            <p>Ảnh lỗi</p>
                        }
                    }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Index)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new {  id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
<partial name="_Paging" model="@ViewBag.pagingmodel" />
<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 30px;
        text-align: center;
    }

    th {
        background-color: #f2f2f2;
    }

    td {
        border-bottom: 1px solid #ddd;
    }

    /* Điều chỉnh chiều rộng của cột tại đây */
    th:nth-child(1), td:nth-child(1) {
        width: 70px;
    }

    th:nth-child(2), td:nth-child(2) {
        width: 150px;
    }

    /* Tùy chỉnh các cột khác tại đây */
</style>
